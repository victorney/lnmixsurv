// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <RcppArmadillo.h>
#include <Rcpp.h>

using namespace Rcpp;

#ifdef RCPP_USE_GLOBAL_ROSTREAM
Rcpp::Rostream<true>&  Rcpp::Rcout = Rcpp::Rcpp_cout_get();
Rcpp::Rostream<false>& Rcpp::Rcerr = Rcpp::Rcpp_cerr_get();
#endif

// sequential_lognormal_mixture_gibbs
arma::field<arma::field<arma::cube>> sequential_lognormal_mixture_gibbs(int Niter, int G, int chains, arma::vec y, arma::ivec delta, arma::mat X, double a, bool silent);
RcppExport SEXP _lnmixsurv_sequential_lognormal_mixture_gibbs(SEXP NiterSEXP, SEXP GSEXP, SEXP chainsSEXP, SEXP ySEXP, SEXP deltaSEXP, SEXP XSEXP, SEXP aSEXP, SEXP silentSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< int >::type Niter(NiterSEXP);
    Rcpp::traits::input_parameter< int >::type G(GSEXP);
    Rcpp::traits::input_parameter< int >::type chains(chainsSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type y(ySEXP);
    Rcpp::traits::input_parameter< arma::ivec >::type delta(deltaSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type X(XSEXP);
    Rcpp::traits::input_parameter< double >::type a(aSEXP);
    Rcpp::traits::input_parameter< bool >::type silent(silentSEXP);
    rcpp_result_gen = Rcpp::wrap(sequential_lognormal_mixture_gibbs(Niter, G, chains, y, delta, X, a, silent));
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_lnmixsurv_sequential_lognormal_mixture_gibbs", (DL_FUNC) &_lnmixsurv_sequential_lognormal_mixture_gibbs, 8},
    {NULL, NULL, 0}
};

RcppExport void R_init_lnmixsurv(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
